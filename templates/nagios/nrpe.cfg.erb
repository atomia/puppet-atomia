#############################################################################
# Sample NRPE Config File
# Written by: Ethan Galstad (nagios@nagios.org)
#
# Last Modified: 11-23-2007
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# LOG FACILITY
# The syslog facility that should be used for logging purposes.

log_facility=daemon



# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.
<% if @osfamily.downcase == 'redhat' %>
pid_file=/var/run/nrpe/nrpe.pid
<% else %>
pid_file=/var/run/nagios/nrpe.pid
<% end %>


# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=127.0.0.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.
# You can either supply a username or a UID.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

<% if @osfamily.downcase == 'redhat' %>
nrpe_user=nrpe
<% else %>
nrpe_user=nagios
<% end %>


# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.
# You can either supply a group name or a GID.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

<% if @osfamily.downcase == 'redhat' %>
nrpe_group=nrpe
<% else %>
nrpe_group=nagios
<% end %>


# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames
# that are allowed to talk to the NRPE daemon.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#allowed_hosts=



# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! ***
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=1



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario:
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

# command_prefix=/usr/bin/sudo



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

#include_dir=<somedirectory>
#include_dir=<someotherdirectory>



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/local/nagios/libexec
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!

<% 
   # We need $sudo in order to be able to list processes on RHEL system as nrpe user.
   # Also this needs to applied on RHEL https://gagor.pl/2014/03/nagios-run-checks-as-root-with-nrpe/
   if @osfamily.downcase == 'redhat' 
        $libpath = 'lib64'
        $apacheprocess = 'httpd'
        $sudo = '/usr/bin/sudo '         
   else
        $libpath = 'lib'
        $apacheprocess = 'apache2'
        $sudo = ''
   end
%>

# The following examples use hardcoded command arguments...
<% $hierapath = "/etc/puppet/hieradata" %>
<% $modulepath = "/etc/puppet/modules/atomia/manifests" %>
<% $lookup_var     = "/etc/puppet/modules/atomia/files/lookup_variable.sh" %>

command[check_users]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_users -w 5 -c 10
command[check_load]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_load -w 15,10,5 -c 30,25,20
command[check_hda1]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_disk -w 20% -c 10% -p /dev/hda1
command[check_zombie_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -w 150 -c 200
command[check_all_disks]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_disk -w 20% -c 10% -e
command[check_apache_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -w 3: -C <%= $apacheprocess %>
command[check_php_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 100 -w 50 -a php
command[check_bind_proc]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -C named
command[check_powerdnssync_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a atomiapowerdnssync
command[check_powerdns_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 2: -a pdns_server
command[check_postgres_proc]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 4:100 -a postgres
command[check_awstats_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a awstats-agent
command[check_daggre_proc]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a daggre
command[check_cronagent_proc]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a atomia-cronagent
command[check_pureftpd_proc]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a pure-ftpd

command[check_daggre_ftp]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_daggre.pl --uri "<%= @daggre_check_ftp_url %>" --timeout 5 --days 1
command[check_daggre_weblog]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_daggre.pl --uri "<%= @daggre_check_traffic_url %>" --timeout 5 --days 1

command[check_all_mountpoints] = <%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_mountpoints.sh -A

command[check_atomiadns]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_atomiadns.sh $ARG1$ http://localhost/atomiadns $ARG2$ $ARG3$
command[check_domainreg]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_domainreg.sh $ARG1$
command[check_glusterfs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/atomia/check_glusterfs -v $ARG1$ -n $ARG2$

# CloudLinux Specific checks
command[check_lvestats_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 3: -a lvestats-server
command[check_cagefs_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a cagefs.server
command[check_cloudlinux_agent_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a app.js
command[check_apache_agent_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -c 1: -a apache_agent_daemon

# The following examples allow user-supplied arguments and can
# only be used if the NRPE daemon was compiled with support for
# command arguments *AND* the dont_blame_nrpe directive in this
# config file is set to '1'.  This poses a potential security risk, so
# make sure you read the SECURITY file before doing this.

command[check_users]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_users -w $ARG1$ -c $ARG2$
command[check_load]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_load -w $ARG1$ -c $ARG2$
command[check_disk]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
command[check_procs]=<%= $sudo %>/usr/<%= $libpath %>/nagios/plugins/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$

#
# local configuration:
#	if you'd prefer, you can instead place directives here
include=/etc/nagios/nrpe_local.cfg

#
# you can place your config snipplets into nrpe.d/
# only snipplets ending in .cfg will get included
<% if @osfamily.downcase == 'redhat' %>
include_dir=/etc/nrpe.d/
<% else %>
include_dir=/etc/nagios/nrpe.d/
<% end %>